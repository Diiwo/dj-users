# Generated by Django 5.2 on 2025-06-24 02:36

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import django_currentuser.db.models.fields
import django_currentuser.middleware
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "lock_type",
                    models.CharField(
                        choices=[
                            ("full", "Full Access"),
                            ("read", "Read Only"),
                            ("none", "No Access"),
                        ],
                        default="full",
                        max_length=10,
                    ),
                ),
                ("object_locked", models.BooleanField(default=False)),
                (
                    "universal_state",
                    models.CharField(
                        choices=[
                            ("created", "Created"),
                            ("frozen", "Frozen"),
                            ("active", "Active"),
                            ("effective", "Effective"),
                            ("terminated", "Terminated"),
                        ],
                        db_index=True,
                        default="active",
                        max_length=15,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "imagen",
                    models.ImageField(blank=True, null=True, upload_to="perfiles/"),
                ),
                ("phone_number", models.CharField(blank=True, max_length=20)),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("agenda_token", models.UUIDField(default=uuid.uuid4, unique=True)),
                ("confirmation_token", models.UUIDField(default=uuid.uuid4)),
                ("birth_date", models.DateField(blank=True, null=True)),
                (
                    "user_type",
                    models.CharField(
                        choices=[
                            ("patient", "Paciente"),
                            ("doctor", "MÃ©dico"),
                            ("nurse", "Enfermero/a"),
                            ("admin", "Administrador"),
                        ],
                        default="patient",
                        max_length=20,
                    ),
                ),
                (
                    "created_by",
                    django_currentuser.db.models.fields.CurrentUserField(
                        default=django_currentuser.middleware.get_current_authenticated_user,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "updated_by",
                    django_currentuser.db.models.fields.CurrentUserField(
                        default=django_currentuser.middleware.get_current_authenticated_user,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        on_update=True,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "Usuario",
                "verbose_name_plural": "Usuarios",
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="DoctorProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "lock_type",
                    models.CharField(
                        choices=[
                            ("full", "Full Access"),
                            ("read", "Read Only"),
                            ("none", "No Access"),
                        ],
                        default="full",
                        max_length=10,
                    ),
                ),
                ("object_locked", models.BooleanField(default=False)),
                (
                    "universal_state",
                    models.CharField(
                        choices=[
                            ("created", "Created"),
                            ("frozen", "Frozen"),
                            ("active", "Active"),
                            ("effective", "Effective"),
                            ("terminated", "Terminated"),
                        ],
                        db_index=True,
                        default="active",
                        max_length=15,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("specialty", models.CharField(max_length=100)),
                ("license_number", models.CharField(max_length=50)),
                ("kit_accepted", models.BooleanField(default=False)),
                ("professional_license", models.CharField(max_length=50)),
                ("verificated", models.BooleanField(default=False)),
                (
                    "created_by",
                    django_currentuser.db.models.fields.CurrentUserField(
                        default=django_currentuser.middleware.get_current_authenticated_user,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    django_currentuser.db.models.fields.CurrentUserField(
                        default=django_currentuser.middleware.get_current_authenticated_user,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        on_update=True,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="doctor_data",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Perfil de mÃ©dico",
            },
        ),
        migrations.CreateModel(
            name="NurseProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "lock_type",
                    models.CharField(
                        choices=[
                            ("full", "Full Access"),
                            ("read", "Read Only"),
                            ("none", "No Access"),
                        ],
                        default="full",
                        max_length=10,
                    ),
                ),
                ("object_locked", models.BooleanField(default=False)),
                (
                    "universal_state",
                    models.CharField(
                        choices=[
                            ("created", "Created"),
                            ("frozen", "Frozen"),
                            ("active", "Active"),
                            ("effective", "Effective"),
                            ("terminated", "Terminated"),
                        ],
                        db_index=True,
                        default="active",
                        max_length=15,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("available_services", models.TextField(blank=True)),
                (
                    "created_by",
                    django_currentuser.db.models.fields.CurrentUserField(
                        default=django_currentuser.middleware.get_current_authenticated_user,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    django_currentuser.db.models.fields.CurrentUserField(
                        default=django_currentuser.middleware.get_current_authenticated_user,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        on_update=True,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="nurse_data",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Perfil de enfermera",
                "verbose_name_plural": "Perfil de enfermeras",
            },
        ),
        migrations.CreateModel(
            name="PatientProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "lock_type",
                    models.CharField(
                        choices=[
                            ("full", "Full Access"),
                            ("read", "Read Only"),
                            ("none", "No Access"),
                        ],
                        default="full",
                        max_length=10,
                    ),
                ),
                ("object_locked", models.BooleanField(default=False)),
                (
                    "universal_state",
                    models.CharField(
                        choices=[
                            ("created", "Created"),
                            ("frozen", "Frozen"),
                            ("active", "Active"),
                            ("effective", "Effective"),
                            ("terminated", "Terminated"),
                        ],
                        db_index=True,
                        default="active",
                        max_length=15,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "blood_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("A+", "A+"),
                            ("A-", "A-"),
                            ("B+", "B+"),
                            ("B-", "B-"),
                            ("O+", "O+"),
                            ("O-", "O-"),
                            ("AB+", "AB+"),
                            ("AB-", "AB-"),
                        ],
                        max_length=3,
                    ),
                ),
                ("allergies", models.TextField(blank=True)),
                ("conditions", models.TextField(blank=True)),
                (
                    "weight",
                    models.DecimalField(decimal_places=2, max_digits=5, null=True),
                ),
                (
                    "height",
                    models.DecimalField(decimal_places=2, max_digits=5, null=True),
                ),
                (
                    "created_by",
                    django_currentuser.db.models.fields.CurrentUserField(
                        default=django_currentuser.middleware.get_current_authenticated_user,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    django_currentuser.db.models.fields.CurrentUserField(
                        default=django_currentuser.middleware.get_current_authenticated_user,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        on_update=True,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="patient_data",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Perfil de paciente",
                "verbose_name_plural": "Perfil de pacientes",
            },
        ),
    ]
